/** @license
  Copyright 2021 Daltro A. Campanher de Souza

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 */
export default class SimpleLocaleLoader{constructor(localesMap,localizeOnStart=true,fallbackLocale="en"){this.browserLocale=navigator.language.substr(0,2);this.fallback=fallbackLocale;this.localizeOnStart=localizeOnStart;this.mapUrl=localesMap}initialize(){return new Promise(resolve=>{fetch(this.mapUrl).then(r=>r.json()).then(map=>this.availableLocales=map).then(()=>this.loadLocale()).then(()=>{if(this.localizeOnStart)this.localizeDocument()}).then(()=>resolve(true)).catch(err=>{throw new Error(err)})})}loadLocale(){if(!this.locale)this.setCurrentLocale();const localeUrl=this.mapUrl.slice(0,this.mapUrl.lastIndexOf("/"))+`/${this.locale}.json`;return new Promise((resolve,reject)=>{fetch(localeUrl).then(r=>r.json()).then(data=>{this.strings=data;resolve(true)}).catch(err=>{reject(err)})})}setCurrentLocale(){if(this.isAvailableLocale(this.browserLocale)){this.locale=this.browserLocale}else{this.locale=this.fallback}}isAvailableLocale(langCode){for(const lang of this.availableLocales){if(langCode==lang)return true}return false}localizeDocument(){for(const node of document.querySelectorAll("[string]")){const nodeString=node.getAttribute("string");const thestring=eval(`this.strings.${nodeString}`);node.innerHTML=thestring}for(const node of document.querySelectorAll("[placeholderstring]")){const phString=node.getAttribute("placeholderstring");const thestring=eval(`this.strings.${phString}`);node.setAttribute("placeholder",thestring)}window.dispatchEvent(new Event("localesloaded"))}getString(key){if(!this.strings)return false;try{return eval(`this.strings.${key}`)}catch(err){console.log(err);return false}}}